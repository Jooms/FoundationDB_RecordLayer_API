// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ticket_tracker_service.proto

package com.jooms.tickettracker;

/**
 * Protobuf type {@code GetTicketResponse}
 */
public  final class GetTicketResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:GetTicketResponse)
    GetTicketResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetTicketResponse.newBuilder() to construct.
  private GetTicketResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetTicketResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetTicketResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GetTicketResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            found_ = input.readBool();
            break;
          }
          case 18: {
            com.jooms.tickettracker.TicketTracker.Ticket.Builder subBuilder = null;
            if (ticket_ != null) {
              subBuilder = ticket_.toBuilder();
            }
            ticket_ = input.readMessage(com.jooms.tickettracker.TicketTracker.Ticket.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ticket_);
              ticket_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.jooms.tickettracker.TicketTrackerService.internal_static_GetTicketResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.jooms.tickettracker.TicketTrackerService.internal_static_GetTicketResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.jooms.tickettracker.GetTicketResponse.class, com.jooms.tickettracker.GetTicketResponse.Builder.class);
  }

  public static final int FOUND_FIELD_NUMBER = 1;
  private boolean found_;
  /**
   * <code>bool found = 1;</code>
   */
  public boolean getFound() {
    return found_;
  }

  public static final int TICKET_FIELD_NUMBER = 2;
  private com.jooms.tickettracker.TicketTracker.Ticket ticket_;
  /**
   * <code>.Ticket ticket = 2;</code>
   */
  public boolean hasTicket() {
    return ticket_ != null;
  }
  /**
   * <code>.Ticket ticket = 2;</code>
   */
  public com.jooms.tickettracker.TicketTracker.Ticket getTicket() {
    return ticket_ == null ? com.jooms.tickettracker.TicketTracker.Ticket.getDefaultInstance() : ticket_;
  }
  /**
   * <code>.Ticket ticket = 2;</code>
   */
  public com.jooms.tickettracker.TicketTracker.TicketOrBuilder getTicketOrBuilder() {
    return getTicket();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (found_ != false) {
      output.writeBool(1, found_);
    }
    if (ticket_ != null) {
      output.writeMessage(2, getTicket());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (found_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, found_);
    }
    if (ticket_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTicket());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.jooms.tickettracker.GetTicketResponse)) {
      return super.equals(obj);
    }
    com.jooms.tickettracker.GetTicketResponse other = (com.jooms.tickettracker.GetTicketResponse) obj;

    if (getFound()
        != other.getFound()) return false;
    if (hasTicket() != other.hasTicket()) return false;
    if (hasTicket()) {
      if (!getTicket()
          .equals(other.getTicket())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FOUND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFound());
    if (hasTicket()) {
      hash = (37 * hash) + TICKET_FIELD_NUMBER;
      hash = (53 * hash) + getTicket().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jooms.tickettracker.GetTicketResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.jooms.tickettracker.GetTicketResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code GetTicketResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:GetTicketResponse)
      com.jooms.tickettracker.GetTicketResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jooms.tickettracker.TicketTrackerService.internal_static_GetTicketResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jooms.tickettracker.TicketTrackerService.internal_static_GetTicketResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jooms.tickettracker.GetTicketResponse.class, com.jooms.tickettracker.GetTicketResponse.Builder.class);
    }

    // Construct using com.jooms.tickettracker.GetTicketResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      found_ = false;

      if (ticketBuilder_ == null) {
        ticket_ = null;
      } else {
        ticket_ = null;
        ticketBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.jooms.tickettracker.TicketTrackerService.internal_static_GetTicketResponse_descriptor;
    }

    @java.lang.Override
    public com.jooms.tickettracker.GetTicketResponse getDefaultInstanceForType() {
      return com.jooms.tickettracker.GetTicketResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.jooms.tickettracker.GetTicketResponse build() {
      com.jooms.tickettracker.GetTicketResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.jooms.tickettracker.GetTicketResponse buildPartial() {
      com.jooms.tickettracker.GetTicketResponse result = new com.jooms.tickettracker.GetTicketResponse(this);
      result.found_ = found_;
      if (ticketBuilder_ == null) {
        result.ticket_ = ticket_;
      } else {
        result.ticket_ = ticketBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.jooms.tickettracker.GetTicketResponse) {
        return mergeFrom((com.jooms.tickettracker.GetTicketResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.jooms.tickettracker.GetTicketResponse other) {
      if (other == com.jooms.tickettracker.GetTicketResponse.getDefaultInstance()) return this;
      if (other.getFound() != false) {
        setFound(other.getFound());
      }
      if (other.hasTicket()) {
        mergeTicket(other.getTicket());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.jooms.tickettracker.GetTicketResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.jooms.tickettracker.GetTicketResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean found_ ;
    /**
     * <code>bool found = 1;</code>
     */
    public boolean getFound() {
      return found_;
    }
    /**
     * <code>bool found = 1;</code>
     */
    public Builder setFound(boolean value) {
      
      found_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool found = 1;</code>
     */
    public Builder clearFound() {
      
      found_ = false;
      onChanged();
      return this;
    }

    private com.jooms.tickettracker.TicketTracker.Ticket ticket_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.jooms.tickettracker.TicketTracker.Ticket, com.jooms.tickettracker.TicketTracker.Ticket.Builder, com.jooms.tickettracker.TicketTracker.TicketOrBuilder> ticketBuilder_;
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public boolean hasTicket() {
      return ticketBuilder_ != null || ticket_ != null;
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public com.jooms.tickettracker.TicketTracker.Ticket getTicket() {
      if (ticketBuilder_ == null) {
        return ticket_ == null ? com.jooms.tickettracker.TicketTracker.Ticket.getDefaultInstance() : ticket_;
      } else {
        return ticketBuilder_.getMessage();
      }
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public Builder setTicket(com.jooms.tickettracker.TicketTracker.Ticket value) {
      if (ticketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ticket_ = value;
        onChanged();
      } else {
        ticketBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public Builder setTicket(
        com.jooms.tickettracker.TicketTracker.Ticket.Builder builderForValue) {
      if (ticketBuilder_ == null) {
        ticket_ = builderForValue.build();
        onChanged();
      } else {
        ticketBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public Builder mergeTicket(com.jooms.tickettracker.TicketTracker.Ticket value) {
      if (ticketBuilder_ == null) {
        if (ticket_ != null) {
          ticket_ =
            com.jooms.tickettracker.TicketTracker.Ticket.newBuilder(ticket_).mergeFrom(value).buildPartial();
        } else {
          ticket_ = value;
        }
        onChanged();
      } else {
        ticketBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public Builder clearTicket() {
      if (ticketBuilder_ == null) {
        ticket_ = null;
        onChanged();
      } else {
        ticket_ = null;
        ticketBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public com.jooms.tickettracker.TicketTracker.Ticket.Builder getTicketBuilder() {
      
      onChanged();
      return getTicketFieldBuilder().getBuilder();
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    public com.jooms.tickettracker.TicketTracker.TicketOrBuilder getTicketOrBuilder() {
      if (ticketBuilder_ != null) {
        return ticketBuilder_.getMessageOrBuilder();
      } else {
        return ticket_ == null ?
            com.jooms.tickettracker.TicketTracker.Ticket.getDefaultInstance() : ticket_;
      }
    }
    /**
     * <code>.Ticket ticket = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.jooms.tickettracker.TicketTracker.Ticket, com.jooms.tickettracker.TicketTracker.Ticket.Builder, com.jooms.tickettracker.TicketTracker.TicketOrBuilder> 
        getTicketFieldBuilder() {
      if (ticketBuilder_ == null) {
        ticketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.jooms.tickettracker.TicketTracker.Ticket, com.jooms.tickettracker.TicketTracker.Ticket.Builder, com.jooms.tickettracker.TicketTracker.TicketOrBuilder>(
                getTicket(),
                getParentForChildren(),
                isClean());
        ticket_ = null;
      }
      return ticketBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:GetTicketResponse)
  }

  // @@protoc_insertion_point(class_scope:GetTicketResponse)
  private static final com.jooms.tickettracker.GetTicketResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.jooms.tickettracker.GetTicketResponse();
  }

  public static com.jooms.tickettracker.GetTicketResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetTicketResponse>
      PARSER = new com.google.protobuf.AbstractParser<GetTicketResponse>() {
    @java.lang.Override
    public GetTicketResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GetTicketResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GetTicketResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetTicketResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.jooms.tickettracker.GetTicketResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

